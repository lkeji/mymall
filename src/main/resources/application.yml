#端口号
server:
  port: 9090

spring:
  #mysql数据库
  datasource:
    url:  jdbc:mysql://127.0.0.1:3307/mall?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: Bodan388
    driverClassName:  com.mysql.cj.jdbc.Driver
  #redis
  redis:
    host: 127.0.0.1 # Redis服务器地址
    database: 0 # Redis数据库索引（默认为0）
    port: 6379 # Redis服务器连接端口
    password: # Redis服务器连接密码（默认为空）
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连接
        min-idle: 0 # 连接池中的最小空闲连接
    timeout: 3000ms # 连接超时时间（毫秒）
  #发送邮箱
  mail:
    port: 465 #不加会报错,因为QQ邮箱默认端口为465：Couldn't connect to host, port: smtp.qq.com, 25; timeout -1
    host: smtp.qq.com
    username: 1545431995@qq.com
    #填写自己的邮箱授权码
    password: isxixhbsgnpybage
    properties:
      mail:
        smtp:
          auth: true
          socketFactory: #不加会报错，因为QQ邮箱默认端口为465：Couldn't connect to host, port: smtp.qq.com, 25; timeout -1
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
          starttls:
            enable: true
            required: true
  #ES
  data:
    elasticsearch:
      repositories:
        enabled: true #ES健康检查
      cluster-nodes: 127.0.0.1:9300 # es的连接地址及端口号(9300是ES和java的交互端口，9200是ES和http的交互端口)
      cluster-name: elasticsearch # es集群的名称

#xml文件的路径配置的模糊匹配
mybatis:
  mapper-locations:
    - classpath:mapper/*.xml
    - classpath*:com/**/mapper/*.xml
logging:
  config:
    classpath: logback-spring.xml
#redis
redis:
  # 自定义redis key
  key:
    prefix:
      authCode: "portal:authCode:"
    expire:
      authCode: 120 # 过期时间
#自定义 jwt key
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mySecret #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开头


